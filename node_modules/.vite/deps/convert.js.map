{
  "version": 3,
  "sources": ["../../convert/src/generated/best-units.ts", "../../convert/src/generated/parse-unit.ts", "../../convert/src/converters/convert.ts", "../../convert/src/converters/convert-many.ts", "../../convert/src/converters/get-measure-kind.ts", "../../convert/src/converters/ms.ts"],
  "sourcesContent": ["// Generated at 11/11/2024, 1:56:33 PM\n\nexport const bestUnits = [\n  [[[\"deg\",1]],[[\"mm2\",1],[\"cm2\",100],[\"m2\",1000000],[\"km2\",1000000000000]],[[\"bits\",1],[\"B\",8],[\"KB\",8000],[\"MB\",8000000],[\"GB\",8000000000],[\"TB\",8000000000000],[\"PB\",8000000000000000]],[[\"J\",1],[\"Wh\",3600],[\"kWh\",3600000],[\"MWh\",3600000000],[\"GWh\",3600000000000]],[[\"N\",1]],[[\"mm\",1],[\"cm\",10],[\"m\",1000],[\"km\",1000000]],[[\"mg\",1],[\"g\",1000],[\"kg\",1000000]],[[\"W\",1],[\"kW\",1000],[\"MW\",1000000],[\"GW\",1000000000],[\"TW\",1000000000000],[\"PW\",1000000000000000]],[[\"Pa\",1]],[[\"C\",1]],[[\"fs\",1],[\"ps\",1000],[\"ns\",1000000],[\"µs\",1000000000],[\"ms\",1000000000000],[\"s\",1000000000000000],[\"min\",60000000000000000],[\"h\",3600000000000000000],[\"d\",86400000000000000000],[\"y\",3.1536e+22]],[[\"mL\",1],[\"L\",1000]]],\n  [[[\"deg\",1]],[[\"sq in\",1],[\"sq ft\",144],[\"ac\",6272640],[\"sq mi\",4014489600]],[[\"bits\",1],[\"B\",8],[\"KiB\",8192],[\"MiB\",8388608],[\"GiB\",8589934592],[\"TiB\",8796093022208],[\"PiB\",9007199254740992]],[[\"J\",1],[\"Wh\",3600],[\"kWh\",3600000],[\"MWh\",3600000000],[\"GWh\",3600000000000]],[[\"lbf\",1]],[[\"in\",1],[\"ft\",12],[\"yd\",36],[\"mi\",63360]],[[\"oz\",1],[\"lb\",16]],[[\"W\",1],[\"kW\",1000],[\"MW\",1000000],[\"GW\",1000000000],[\"TW\",1000000000000],[\"PW\",1000000000000000]],[[\"psi\",1]],[[\"F\",1]],[[\"fs\",1],[\"ps\",1000],[\"ns\",1000000],[\"µs\",1000000000],[\"ms\",1000000000000],[\"s\",1000000000000000],[\"min\",60000000000000000],[\"h\",3600000000000000000],[\"d\",86400000000000000000],[\"y\",3.1536e+22]],[[\"tsp\",1],[\"tbsp\",3],[\"fl oz\",6],[\"cup\",48],[\"pt\",96],[\"qt\",192],[\"gal\",768]]]\n] as const;\n\nexport type BestUnits = {\n  imperial: 'deg' | 'sq in' | 'sq ft' | 'ac' | 'sq mi' | 'bits' | 'B' | 'KiB' | 'MiB' | 'GiB' | 'TiB' | 'PiB' | 'J' | 'Wh' | 'kWh' | 'MWh' | 'GWh' | 'lbf' | 'in' | 'ft' | 'yd' | 'mi' | 'oz' | 'lb' | 'W' | 'kW' | 'MW' | 'GW' | 'TW' | 'PW' | 'psi' | 'F' | 'fs' | 'ps' | 'ns' | 'µs' | 'ms' | 's' | 'min' | 'h' | 'd' | 'y' | 'tsp' | 'tbsp' | 'fl oz' | 'cup' | 'pt' | 'qt' | 'gal';\n  metric: 'deg' | 'mm2' | 'cm2' | 'm2' | 'km2' | 'bits' | 'B' | 'KB' | 'MB' | 'GB' | 'TB' | 'PB' | 'J' | 'Wh' | 'kWh' | 'MWh' | 'GWh' | 'N' | 'mm' | 'cm' | 'm' | 'km' | 'mg' | 'g' | 'kg' | 'W' | 'kW' | 'MW' | 'GW' | 'TW' | 'PW' | 'Pa' | 'C' | 'fs' | 'ps' | 'ns' | 'µs' | 'ms' | 's' | 'min' | 'h' | 'd' | 'y' | 'mL' | 'L';\n};", "// Generated at 11/11/2024, 1:56:33 PM\n\nexport const unitsObject = {\n  'radian': [0, 1],\n  'radians': [0, 1],\n  'rad': [0, 1],\n  'rads': [0, 1],\n  'r': [0, 1],\n  'turn': [0, 2 * Math.PI],\n  'turns': [0, 2 * Math.PI],\n  'degree': [0, Math.PI / 180],\n  'degrees': [0, Math.PI / 180],\n  'deg': [0, Math.PI / 180],\n  'degs': [0, Math.PI / 180],\n  '°': [0, Math.PI / 180],\n  'gradian': [0, Math.PI / 200],\n  'gradians': [0, Math.PI / 200],\n  'gon': [0, Math.PI / 200],\n  'gons': [0, Math.PI / 200],\n  'grad': [0, Math.PI / 200],\n  'grads': [0, Math.PI / 200],\n  'grade': [0, Math.PI / 200],\n  'grades': [0, Math.PI / 200],\n  'square meter': [1, 1],\n  'square meters': [1, 1],\n  'square metre': [1, 1],\n  'square metres': [1, 1],\n  'm²': [1, 1],\n  'm2': [1, 1],\n  'square petameter': [1, 1e+30],\n  'square petametre': [1, 1e+30],\n  'square petameters': [1, 1e+30],\n  'square petametres': [1, 1e+30],\n  'Pm²': [1, 1e+30],\n  'Pm2': [1, 1e+30],\n  'square terameter': [1, 1e+24],\n  'square terametre': [1, 1e+24],\n  'square terameters': [1, 1e+24],\n  'square terametres': [1, 1e+24],\n  'Tm²': [1, 1e+24],\n  'Tm2': [1, 1e+24],\n  'square gigameter': [1, 1000000000000000000],\n  'square gigametre': [1, 1000000000000000000],\n  'square gigameters': [1, 1000000000000000000],\n  'square gigametres': [1, 1000000000000000000],\n  'Gm²': [1, 1000000000000000000],\n  'Gm2': [1, 1000000000000000000],\n  'square megameter': [1, 1000000000000],\n  'square megametre': [1, 1000000000000],\n  'square megameters': [1, 1000000000000],\n  'square megametres': [1, 1000000000000],\n  'Mm²': [1, 1000000000000],\n  'Mm2': [1, 1000000000000],\n  'square kilometer': [1, 1000000],\n  'square kilometre': [1, 1000000],\n  'square kilometers': [1, 1000000],\n  'square kilometres': [1, 1000000],\n  'km²': [1, 1000000],\n  'km2': [1, 1000000],\n  'square hectometer': [1, 10000],\n  'square hectometre': [1, 10000],\n  'square hectometers': [1, 10000],\n  'square hectometres': [1, 10000],\n  'hm²': [1, 10000],\n  'hm2': [1, 10000],\n  'square decameter': [1, 100],\n  'square decametre': [1, 100],\n  'square decameters': [1, 100],\n  'square decametres': [1, 100],\n  'dam²': [1, 100],\n  'dam2': [1, 100],\n  'square decimeter': [1, 0.1],\n  'square decimetre': [1, 0.1],\n  'square decimeters': [1, 0.1],\n  'square decimetres': [1, 0.1],\n  'dm²': [1, 0.1],\n  'dm2': [1, 0.1],\n  'square centimeter': [1, 0.0001],\n  'square centimetre': [1, 0.0001],\n  'square centimeters': [1, 0.0001],\n  'square centimetres': [1, 0.0001],\n  'cm²': [1, 0.0001],\n  'cm2': [1, 0.0001],\n  'square millimeter': [1, 0.000001],\n  'square millimetre': [1, 0.000001],\n  'square millimeters': [1, 0.000001],\n  'square millimetres': [1, 0.000001],\n  'mm²': [1, 0.000001],\n  'mm2': [1, 0.000001],\n  'square micrometer': [1, 1e-12],\n  'square micrometre': [1, 1e-12],\n  'square micrometers': [1, 1e-12],\n  'square micrometres': [1, 1e-12],\n  'μm²': [1, 1e-12],\n  'µm²': [1, 1e-12],\n  'μm2': [1, 1e-12],\n  'µm2': [1, 1e-12],\n  'square nanometer': [1, 1e-18],\n  'square nanometre': [1, 1e-18],\n  'square nanometers': [1, 1e-18],\n  'square nanometres': [1, 1e-18],\n  'nm²': [1, 1e-18],\n  'nm2': [1, 1e-18],\n  'square picometer': [1, 1e-24],\n  'square picometre': [1, 1e-24],\n  'square picometers': [1, 1e-24],\n  'square picometres': [1, 1e-24],\n  'pm²': [1, 1e-24],\n  'pm2': [1, 1e-24],\n  'square femtometer': [1, 1e-30],\n  'square femtometre': [1, 1e-30],\n  'square femtometers': [1, 1e-30],\n  'square femtometres': [1, 1e-30],\n  'fm²': [1, 1e-30],\n  'fm2': [1, 1e-30],\n  'acre': [1, 4046.8564224],\n  'acres': [1, 4046.8564224],\n  'ac': [1, 4046.8564224],\n  'centiare': [1, 1],\n  'centiares': [1, 1],\n  'ca': [1, 1],\n  'deciare': [1, 10],\n  'deciares': [1, 10],\n  'da': [1, 10],\n  'are': [1, 100],\n  'ares': [1, 100],\n  'decare': [1, 1000],\n  'decares': [1, 1000],\n  'daa': [1, 1000],\n  'hectare': [1, 10000],\n  'hectares': [1, 10000],\n  'ha': [1, 10000],\n  'square foot': [1, 0.09290304],\n  'square feet': [1, 0.09290304],\n  'sq ft': [1, 0.09290304],\n  'ft²': [1, 0.09290304],\n  'ft2': [1, 0.09290304],\n  'square inch': [1, 0.00064516],\n  'square inches': [1, 0.00064516],\n  'sq in': [1, 0.00064516],\n  'in²': [1, 0.00064516],\n  'in2': [1, 0.00064516],\n  'square yard': [1, 0.83612736],\n  'square yards': [1, 0.83612736],\n  'sq yd': [1, 0.83612736],\n  'yd²': [1, 0.83612736],\n  'yd2': [1, 0.83612736],\n  'square mile': [1, 2589988.110336],\n  'square miles': [1, 2589988.110336],\n  'sq mi': [1, 2589988.110336],\n  'mi²': [1, 2589988.110336],\n  'mi2': [1, 2589988.110336],\n  'bit': [2, 1],\n  'bits': [2, 1],\n  'b': [2, 1],\n  'pebibit': [2, 1125899906842624],\n  'pebibits': [2, 1125899906842624],\n  'Pib': [2, 1125899906842624],\n  'tebibit': [2, 1099511627776],\n  'tebibits': [2, 1099511627776],\n  'Tib': [2, 1099511627776],\n  'gibibit': [2, 1073741824],\n  'gibibits': [2, 1073741824],\n  'Gib': [2, 1073741824],\n  'mebibit': [2, 1048576],\n  'mebibits': [2, 1048576],\n  'Mib': [2, 1048576],\n  'kibibit': [2, 1024],\n  'kibibits': [2, 1024],\n  'Kib': [2, 1024],\n  'Kb': [2, 1000],\n  'KB': [2, 8000],\n  'petabit': [2, 1000000000000000],\n  'petabits': [2, 1000000000000000],\n  'Pb': [2, 1000000000000000],\n  'terabit': [2, 1000000000000],\n  'terabits': [2, 1000000000000],\n  'Tb': [2, 1000000000000],\n  'gigabit': [2, 1000000000],\n  'gigabits': [2, 1000000000],\n  'Gb': [2, 1000000000],\n  'megabit': [2, 1000000],\n  'megabits': [2, 1000000],\n  'Mb': [2, 1000000],\n  'kilobit': [2, 1000],\n  'kilobits': [2, 1000],\n  'kb': [2, 1000],\n  'hectobit': [2, 100],\n  'hectobits': [2, 100],\n  'hb': [2, 100],\n  'decabit': [2, 10],\n  'decabits': [2, 10],\n  'dab': [2, 10],\n  'decibit': [2, 0.1],\n  'decibits': [2, 0.1],\n  'db': [2, 0.1],\n  'centibit': [2, 0.01],\n  'centibits': [2, 0.01],\n  'cb': [2, 0.01],\n  'millibit': [2, 0.001],\n  'millibits': [2, 0.001],\n  'mb': [2, 0.001],\n  'microbit': [2, 0.000001],\n  'microbits': [2, 0.000001],\n  'μb': [2, 0.000001],\n  'µb': [2, 0.000001],\n  'nanobit': [2, 1e-9],\n  'nanobits': [2, 1e-9],\n  'nb': [2, 1e-9],\n  'picobit': [2, 1e-12],\n  'picobits': [2, 1e-12],\n  'pb': [2, 1e-12],\n  'femtobit': [2, 1e-15],\n  'femtobits': [2, 1e-15],\n  'fb': [2, 1e-15],\n  'nibble': [2, 4],\n  'nibbles': [2, 4],\n  'semioctet': [2, 4],\n  'semioctets': [2, 4],\n  'halfbyte': [2, 4],\n  'halfbytes': [2, 4],\n  'byte': [2, 8],\n  'bytes': [2, 8],\n  'octect': [2, 8],\n  'octects': [2, 8],\n  'B': [2, 8],\n  'pebibyte': [2, 9007199254740992],\n  'pebibytes': [2, 9007199254740992],\n  'PiB': [2, 9007199254740992],\n  'tebibyte': [2, 8796093022208],\n  'tebibytes': [2, 8796093022208],\n  'TiB': [2, 8796093022208],\n  'gibibyte': [2, 8589934592],\n  'gibibytes': [2, 8589934592],\n  'GiB': [2, 8589934592],\n  'mebibyte': [2, 8388608],\n  'mebibytes': [2, 8388608],\n  'MiB': [2, 8388608],\n  'kibibyte': [2, 8192],\n  'kibibytes': [2, 8192],\n  'KiB': [2, 8192],\n  'petabyte': [2, 8000000000000000],\n  'petabytes': [2, 8000000000000000],\n  'PB': [2, 8000000000000000],\n  'terabyte': [2, 8000000000000],\n  'terabytes': [2, 8000000000000],\n  'TB': [2, 8000000000000],\n  'gigabyte': [2, 8000000000],\n  'gigabytes': [2, 8000000000],\n  'GB': [2, 8000000000],\n  'megabyte': [2, 8000000],\n  'megabytes': [2, 8000000],\n  'MB': [2, 8000000],\n  'kilobyte': [2, 8000],\n  'kilobytes': [2, 8000],\n  'kB': [2, 8000],\n  'hectobyte': [2, 800],\n  'hectobytes': [2, 800],\n  'hB': [2, 800],\n  'decabyte': [2, 80],\n  'decabytes': [2, 80],\n  'daB': [2, 80],\n  'decibyte': [2, 0.8],\n  'decibytes': [2, 0.8],\n  'dB': [2, 0.8],\n  'centibyte': [2, 0.08],\n  'centibytes': [2, 0.08],\n  'cB': [2, 0.08],\n  'millibyte': [2, 0.008],\n  'millibytes': [2, 0.008],\n  'mB': [2, 0.008],\n  'microbyte': [2, 0.000008],\n  'microbytes': [2, 0.000008],\n  'μB': [2, 0.000008],\n  'µB': [2, 0.000008],\n  'nanobyte': [2, 8e-9],\n  'nanobytes': [2, 8e-9],\n  'nB': [2, 8e-9],\n  'picobyte': [2, 8e-12],\n  'picobytes': [2, 8e-12],\n  'pB': [2, 8e-12],\n  'femtobyte': [2, 8e-15],\n  'femtobytes': [2, 8e-15],\n  'fB': [2, 8e-15],\n  'hextet': [2, 16],\n  'hextets': [2, 16],\n  'joule': [3, 1],\n  'joules': [3, 1],\n  'J': [3, 1],\n  'petajoule': [3, 1000000000000000],\n  'petajoules': [3, 1000000000000000],\n  'PJ': [3, 1000000000000000],\n  'terajoule': [3, 1000000000000],\n  'terajoules': [3, 1000000000000],\n  'TJ': [3, 1000000000000],\n  'gigajoule': [3, 1000000000],\n  'gigajoules': [3, 1000000000],\n  'GJ': [3, 1000000000],\n  'megajoule': [3, 1000000],\n  'megajoules': [3, 1000000],\n  'MJ': [3, 1000000],\n  'kilojoule': [3, 1000],\n  'kilojoules': [3, 1000],\n  'kJ': [3, 1000],\n  'hectojoule': [3, 100],\n  'hectojoules': [3, 100],\n  'hJ': [3, 100],\n  'decajoule': [3, 10],\n  'decajoules': [3, 10],\n  'daJ': [3, 10],\n  'decijoule': [3, 0.1],\n  'decijoules': [3, 0.1],\n  'dJ': [3, 0.1],\n  'centijoule': [3, 0.01],\n  'centijoules': [3, 0.01],\n  'cJ': [3, 0.01],\n  'millijoule': [3, 0.001],\n  'millijoules': [3, 0.001],\n  'mJ': [3, 0.001],\n  'microjoule': [3, 0.000001],\n  'microjoules': [3, 0.000001],\n  'μJ': [3, 0.000001],\n  'µJ': [3, 0.000001],\n  'nanojoule': [3, 1e-9],\n  'nanojoules': [3, 1e-9],\n  'nJ': [3, 1e-9],\n  'picojoule': [3, 1e-12],\n  'picojoules': [3, 1e-12],\n  'pJ': [3, 1e-12],\n  'femtojoule': [3, 1e-15],\n  'femtojoules': [3, 1e-15],\n  'fJ': [3, 1e-15],\n  'watt-hour': [3, 3600],\n  'W⋅h': [3, 3600],\n  'W h': [3, 3600],\n  'Wh': [3, 3600],\n  'petawatt-hour': [3, 3600000000000000000],\n  'petawatt-hours': [3, 3600000000000000000],\n  'PW⋅h': [3, 3600000000000000000],\n  'PW h': [3, 3600000000000000000],\n  'PWh': [3, 3600000000000000000],\n  'terawatt-hour': [3, 3600000000000000],\n  'terawatt-hours': [3, 3600000000000000],\n  'TW⋅h': [3, 3600000000000000],\n  'TW h': [3, 3600000000000000],\n  'TWh': [3, 3600000000000000],\n  'gigawatt-hour': [3, 3600000000000],\n  'gigawatt-hours': [3, 3600000000000],\n  'GW⋅h': [3, 3600000000000],\n  'GW h': [3, 3600000000000],\n  'GWh': [3, 3600000000000],\n  'megawatt-hour': [3, 3600000000],\n  'megawatt-hours': [3, 3600000000],\n  'MW⋅h': [3, 3600000000],\n  'MW h': [3, 3600000000],\n  'MWh': [3, 3600000000],\n  'kilowatt-hour': [3, 3600000],\n  'kilowatt-hours': [3, 3600000],\n  'kW⋅h': [3, 3600000],\n  'kW h': [3, 3600000],\n  'kWh': [3, 3600000],\n  'hectowatt-hour': [3, 360000],\n  'hectowatt-hours': [3, 360000],\n  'hW⋅h': [3, 360000],\n  'hW h': [3, 360000],\n  'hWh': [3, 360000],\n  'decawatt-hour': [3, 36000],\n  'decawatt-hours': [3, 36000],\n  'daW⋅h': [3, 36000],\n  'daW h': [3, 36000],\n  'daWh': [3, 36000],\n  'deciwatt-hour': [3, 360],\n  'deciwatt-hours': [3, 360],\n  'dW⋅h': [3, 360],\n  'dW h': [3, 360],\n  'dWh': [3, 360],\n  'centiwatt-hour': [3, 36],\n  'centiwatt-hours': [3, 36],\n  'cW⋅h': [3, 36],\n  'cW h': [3, 36],\n  'cWh': [3, 36],\n  'milliwatt-hour': [3, 3.6],\n  'milliwatt-hours': [3, 3.6],\n  'mW⋅h': [3, 3.6],\n  'mW h': [3, 3.6],\n  'mWh': [3, 3.6],\n  'microwatt-hour': [3, 0.0036],\n  'microwatt-hours': [3, 0.0036],\n  'μW⋅h': [3, 0.0036],\n  'µW⋅h': [3, 0.0036],\n  'μW h': [3, 0.0036],\n  'µW h': [3, 0.0036],\n  'μWh': [3, 0.0036],\n  'µWh': [3, 0.0036],\n  'nanowatt-hour': [3, 0.0000036],\n  'nanowatt-hours': [3, 0.0000036],\n  'nW⋅h': [3, 0.0000036],\n  'nW h': [3, 0.0000036],\n  'nWh': [3, 0.0000036],\n  'picowatt-hour': [3, 3.6e-9],\n  'picowatt-hours': [3, 3.6e-9],\n  'pW⋅h': [3, 3.6e-9],\n  'pW h': [3, 3.6e-9],\n  'pWh': [3, 3.6e-9],\n  'femtowatt-hour': [3, 3.6e-12],\n  'femtowatt-hours': [3, 3.6e-12],\n  'fW⋅h': [3, 3.6e-12],\n  'fW h': [3, 3.6e-12],\n  'fWh': [3, 3.6e-12],\n  'newton': [4, 1],\n  'newtons': [4, 1],\n  'N': [4, 1],\n  'petanewton': [4, 1000000000000000],\n  'petanewtons': [4, 1000000000000000],\n  'PN': [4, 1000000000000000],\n  'teranewton': [4, 1000000000000],\n  'teranewtons': [4, 1000000000000],\n  'TN': [4, 1000000000000],\n  'giganewton': [4, 1000000000],\n  'giganewtons': [4, 1000000000],\n  'GN': [4, 1000000000],\n  'meganewton': [4, 1000000],\n  'meganewtons': [4, 1000000],\n  'MN': [4, 1000000],\n  'kilonewton': [4, 1000],\n  'kilonewtons': [4, 1000],\n  'kN': [4, 1000],\n  'hectonewton': [4, 100],\n  'hectonewtons': [4, 100],\n  'hN': [4, 100],\n  'decanewton': [4, 10],\n  'decanewtons': [4, 10],\n  'daN': [4, 10],\n  'decinewton': [4, 0.1],\n  'decinewtons': [4, 0.1],\n  'dN': [4, 0.1],\n  'centinewton': [4, 0.01],\n  'centinewtons': [4, 0.01],\n  'cN': [4, 0.01],\n  'millinewton': [4, 0.001],\n  'millinewtons': [4, 0.001],\n  'mN': [4, 0.001],\n  'micronewton': [4, 0.000001],\n  'micronewtons': [4, 0.000001],\n  'μN': [4, 0.000001],\n  'µN': [4, 0.000001],\n  'nanonewton': [4, 1e-9],\n  'nanonewtons': [4, 1e-9],\n  'nN': [4, 1e-9],\n  'piconewton': [4, 1e-12],\n  'piconewtons': [4, 1e-12],\n  'pN': [4, 1e-12],\n  'femtonewton': [4, 1e-15],\n  'femtonewtons': [4, 1e-15],\n  'fN': [4, 1e-15],\n  'dyne': [4, 0.00001],\n  'dynes': [4, 0.00001],\n  'dyn': [4, 0.00001],\n  'pound of force': [4, 4.448222],\n  'pound-force': [4, 4.448222],\n  'lbf': [4, 4.448222],\n  'kip': [4, 4448.2216],\n  'klb': [4, 4448.2216],\n  'kipf': [4, 4448.2216],\n  'klbf': [4, 4448.2216],\n  'poundal': [4, 0.138255],\n  'poundals': [4, 0.138255],\n  'pdl': [4, 0.138255],\n  'kilogram-force': [4, 9.80665],\n  'kilopond': [4, 9.80665],\n  'kiloponds': [4, 9.80665],\n  'kgf': [4, 9.80665],\n  'kp': [4, 9.80665],\n  'tonne-force': [4, 9806.65],\n  'metric ton-force': [4, 9806.65],\n  'megagram-force': [4, 9806.65],\n  'megapond': [4, 9806.65],\n  'tf': [4, 9806.65],\n  'Mp': [4, 9806.65],\n  'meter': [5, 1],\n  'meters': [5, 1],\n  'metre': [5, 1],\n  'metres': [5, 1],\n  'm': [5, 1],\n  'petameter': [5, 1000000000000000],\n  'petametre': [5, 1000000000000000],\n  'petameters': [5, 1000000000000000],\n  'petametres': [5, 1000000000000000],\n  'Pm': [5, 1000000000000000],\n  'terameter': [5, 1000000000000],\n  'terametre': [5, 1000000000000],\n  'terameters': [5, 1000000000000],\n  'terametres': [5, 1000000000000],\n  'Tm': [5, 1000000000000],\n  'gigameter': [5, 1000000000],\n  'gigametre': [5, 1000000000],\n  'gigameters': [5, 1000000000],\n  'gigametres': [5, 1000000000],\n  'Gm': [5, 1000000000],\n  'megameter': [5, 1000000],\n  'megametre': [5, 1000000],\n  'megameters': [5, 1000000],\n  'megametres': [5, 1000000],\n  'Mm': [5, 1000000],\n  'kilometer': [5, 1000],\n  'kilometre': [5, 1000],\n  'kilometers': [5, 1000],\n  'kilometres': [5, 1000],\n  'km': [5, 1000],\n  'hectometer': [5, 100],\n  'hectometre': [5, 100],\n  'hectometers': [5, 100],\n  'hectometres': [5, 100],\n  'hm': [5, 100],\n  'decameter': [5, 10],\n  'decametre': [5, 10],\n  'decameters': [5, 10],\n  'decametres': [5, 10],\n  'dam': [5, 10],\n  'decimeter': [5, 0.1],\n  'decimetre': [5, 0.1],\n  'decimeters': [5, 0.1],\n  'decimetres': [5, 0.1],\n  'dm': [5, 0.1],\n  'centimeter': [5, 0.01],\n  'centimetre': [5, 0.01],\n  'centimeters': [5, 0.01],\n  'centimetres': [5, 0.01],\n  'cm': [5, 0.01],\n  'millimeter': [5, 0.001],\n  'millimetre': [5, 0.001],\n  'millimeters': [5, 0.001],\n  'millimetres': [5, 0.001],\n  'mm': [5, 0.001],\n  'micrometer': [5, 0.000001],\n  'micrometre': [5, 0.000001],\n  'micrometers': [5, 0.000001],\n  'micrometres': [5, 0.000001],\n  'μm': [5, 0.000001],\n  'µm': [5, 0.000001],\n  'nanometer': [5, 1e-9],\n  'nanometre': [5, 1e-9],\n  'nanometers': [5, 1e-9],\n  'nanometres': [5, 1e-9],\n  'nm': [5, 1e-9],\n  'picometer': [5, 1e-12],\n  'picometre': [5, 1e-12],\n  'picometers': [5, 1e-12],\n  'picometres': [5, 1e-12],\n  'pm': [5, 1e-12],\n  'femtometer': [5, 1e-15],\n  'femtometre': [5, 1e-15],\n  'femtometers': [5, 1e-15],\n  'femtometres': [5, 1e-15],\n  'fm': [5, 1e-15],\n  'foot': [5, 0.3048],\n  'feet': [5, 0.3048],\n  'ft': [5, 0.3048],\n  '\\'': [5, 0.3048],\n  'US survey foot': [5, 0.30480060960121920244],\n  'US survey feet': [5, 0.30480060960121920244],\n  'U.S. survey foot': [5, 0.30480060960121920244],\n  'U.S. survey feet': [5, 0.30480060960121920244],\n  'inch': [5, 0.0254],\n  'inches': [5, 0.0254],\n  'in': [5, 0.0254],\n  '\\\"': [5, 0.0254],\n  'yard': [5, 0.9144],\n  'yards': [5, 0.9144],\n  'yd': [5, 0.9144],\n  'mile': [5, 1609.344],\n  'miles': [5, 1609.344],\n  'mi': [5, 1609.344],\n  'nautical mile': [5, 1852],\n  'nautical miles': [5, 1852],\n  'M': [5, 1852],\n  'NM': [5, 1852],\n  'nmi': [5, 1852],\n  'light-year': [5, 9460730472580800],\n  'light-years': [5, 9460730472580800],\n  'ly': [5, 9460730472580800],\n  'pica': [5, 0.0042333],\n  'picas': [5, 0.0042333],\n  'pc': [5, 0.0042333],\n  'point': [5, 0.0003528],\n  'points': [5, 0.0003528],\n  'gram': [6, 1],\n  'grams': [6, 1],\n  'g': [6, 1],\n  'petagram': [6, 1000000000000000],\n  'petagrams': [6, 1000000000000000],\n  'Pg': [6, 1000000000000000],\n  'teragram': [6, 1000000000000],\n  'teragrams': [6, 1000000000000],\n  'Tg': [6, 1000000000000],\n  'gigagram': [6, 1000000000],\n  'gigagrams': [6, 1000000000],\n  'Gg': [6, 1000000000],\n  'megagram': [6, 1000000],\n  'megagrams': [6, 1000000],\n  'Mg': [6, 1000000],\n  'kilogram': [6, 1000],\n  'kilograms': [6, 1000],\n  'kg': [6, 1000],\n  'hectogram': [6, 100],\n  'hectograms': [6, 100],\n  'hg': [6, 100],\n  'decagram': [6, 10],\n  'decagrams': [6, 10],\n  'dag': [6, 10],\n  'decigram': [6, 0.1],\n  'decigrams': [6, 0.1],\n  'dg': [6, 0.1],\n  'centigram': [6, 0.01],\n  'centigrams': [6, 0.01],\n  'cg': [6, 0.01],\n  'milligram': [6, 0.001],\n  'milligrams': [6, 0.001],\n  'mg': [6, 0.001],\n  'microgram': [6, 0.000001],\n  'micrograms': [6, 0.000001],\n  'μg': [6, 0.000001],\n  'µg': [6, 0.000001],\n  'nanogram': [6, 1e-9],\n  'nanograms': [6, 1e-9],\n  'ng': [6, 1e-9],\n  'picogram': [6, 1e-12],\n  'picograms': [6, 1e-12],\n  'pg': [6, 1e-12],\n  'femtogram': [6, 1e-15],\n  'femtograms': [6, 1e-15],\n  'fg': [6, 1e-15],\n  'tonne': [6, 1000000],\n  'tonnes': [6, 1000000],\n  'metric ton': [6, 1000000],\n  'metric tons': [6, 1000000],\n  't': [6, 1000000],\n  'kilotonne': [6, 1000000000],\n  'kilotonnes': [6, 1000000000],\n  'kt': [6, 1000000000],\n  'megatonne': [6, 1000000000000],\n  'megatonnes': [6, 1000000000000],\n  'Mt': [6, 1000000000000],\n  'gigatonne': [6, 1000000000000000],\n  'gigatonnes': [6, 1000000000000000],\n  'Gt': [6, 1000000000000000],\n  'pound': [6, 453.59237],\n  'pounds': [6, 453.59237],\n  'lb': [6, 453.59237],\n  'lbs': [6, 453.59237],\n  'stone': [6, 6350.29318],\n  'stones': [6, 6350.29318],\n  'st': [6, 6350.29318],\n  'ounce': [6, 28.349523125],\n  'ounces': [6, 28.349523125],\n  'oz': [6, 28.349523125],\n  'short ton': [6, 907184.74],\n  'short tons': [6, 907184.74],\n  'US ton': [6, 907184.74],\n  'US tons': [6, 907184.74],\n  'long ton': [6, 1016046.9088],\n  'long tons': [6, 1016046.9088],\n  'imperial ton': [6, 1016046.9088],\n  'imperial tons': [6, 1016046.9088],\n  'displacement ton': [6, 1016046.9088],\n  'displacement tons': [6, 1016046.9088],\n  'watt': [7, 1],\n  'watts': [7, 1],\n  'W': [7, 1],\n  'petawatt': [7, 1000000000000000],\n  'petawatts': [7, 1000000000000000],\n  'PW': [7, 1000000000000000],\n  'terawatt': [7, 1000000000000],\n  'terawatts': [7, 1000000000000],\n  'TW': [7, 1000000000000],\n  'gigawatt': [7, 1000000000],\n  'gigawatts': [7, 1000000000],\n  'GW': [7, 1000000000],\n  'megawatt': [7, 1000000],\n  'megawatts': [7, 1000000],\n  'MW': [7, 1000000],\n  'kilowatt': [7, 1000],\n  'kilowatts': [7, 1000],\n  'kW': [7, 1000],\n  'hectowatt': [7, 100],\n  'hectowatts': [7, 100],\n  'hW': [7, 100],\n  'decawatt': [7, 10],\n  'decawatts': [7, 10],\n  'daW': [7, 10],\n  'deciwatt': [7, 0.1],\n  'deciwatts': [7, 0.1],\n  'dW': [7, 0.1],\n  'centiwatt': [7, 0.01],\n  'centiwatts': [7, 0.01],\n  'cW': [7, 0.01],\n  'milliwatt': [7, 0.001],\n  'milliwatts': [7, 0.001],\n  'mW': [7, 0.001],\n  'microwatt': [7, 0.000001],\n  'microwatts': [7, 0.000001],\n  'μW': [7, 0.000001],\n  'µW': [7, 0.000001],\n  'nanowatt': [7, 1e-9],\n  'nanowatts': [7, 1e-9],\n  'nW': [7, 1e-9],\n  'picowatt': [7, 1e-12],\n  'picowatts': [7, 1e-12],\n  'pW': [7, 1e-12],\n  'femtowatt': [7, 1e-15],\n  'femtowatts': [7, 1e-15],\n  'fW': [7, 1e-15],\n  'horsepower': [7, 745.699872],\n  'mechanical horsepower': [7, 745.699872],\n  'hp': [7, 745.699872],\n  'pascal': [8, 1],\n  'pascals': [8, 1],\n  'Pa': [8, 1],\n  'petapascal': [8, 1000000000000000],\n  'petapascals': [8, 1000000000000000],\n  'PPa': [8, 1000000000000000],\n  'terapascal': [8, 1000000000000],\n  'terapascals': [8, 1000000000000],\n  'TPa': [8, 1000000000000],\n  'gigapascal': [8, 1000000000],\n  'gigapascals': [8, 1000000000],\n  'GPa': [8, 1000000000],\n  'megapascal': [8, 1000000],\n  'megapascals': [8, 1000000],\n  'MPa': [8, 1000000],\n  'kilopascal': [8, 1000],\n  'kilopascals': [8, 1000],\n  'kPa': [8, 1000],\n  'hectopascal': [8, 100],\n  'hectopascals': [8, 100],\n  'hPa': [8, 100],\n  'decapascal': [8, 10],\n  'decapascals': [8, 10],\n  'daPa': [8, 10],\n  'decipascal': [8, 0.1],\n  'decipascals': [8, 0.1],\n  'dPa': [8, 0.1],\n  'centipascal': [8, 0.01],\n  'centipascals': [8, 0.01],\n  'cPa': [8, 0.01],\n  'millipascal': [8, 0.001],\n  'millipascals': [8, 0.001],\n  'mPa': [8, 0.001],\n  'micropascal': [8, 0.000001],\n  'micropascals': [8, 0.000001],\n  'μPa': [8, 0.000001],\n  'µPa': [8, 0.000001],\n  'nanopascal': [8, 1e-9],\n  'nanopascals': [8, 1e-9],\n  'nPa': [8, 1e-9],\n  'picopascal': [8, 1e-12],\n  'picopascals': [8, 1e-12],\n  'pPa': [8, 1e-12],\n  'femtopascal': [8, 1e-15],\n  'femtopascals': [8, 1e-15],\n  'fPa': [8, 1e-15],\n  'bar': [8, 100000],\n  'bars': [8, 100000],\n  'petabar': [8, 100000000000000000000],\n  'petabars': [8, 100000000000000000000],\n  'Pbar': [8, 100000000000000000000],\n  'terabar': [8, 100000000000000000],\n  'terabars': [8, 100000000000000000],\n  'Tbar': [8, 100000000000000000],\n  'gigabar': [8, 100000000000000],\n  'gigabars': [8, 100000000000000],\n  'Gbar': [8, 100000000000000],\n  'megabar': [8, 100000000000],\n  'megabars': [8, 100000000000],\n  'Mbar': [8, 100000000000],\n  'kilobar': [8, 100000000],\n  'kilobars': [8, 100000000],\n  'kbar': [8, 100000000],\n  'hectobar': [8, 10000000],\n  'hectobars': [8, 10000000],\n  'hbar': [8, 10000000],\n  'decabar': [8, 1000000],\n  'decabars': [8, 1000000],\n  'dabar': [8, 1000000],\n  'decibar': [8, 10000],\n  'decibars': [8, 10000],\n  'dbar': [8, 10000],\n  'centibar': [8, 1000],\n  'centibars': [8, 1000],\n  'cbar': [8, 1000],\n  'millibar': [8, 100],\n  'millibars': [8, 100],\n  'mbar': [8, 100],\n  'microbar': [8, 0.1],\n  'microbars': [8, 0.1],\n  'μbar': [8, 0.1],\n  'µbar': [8, 0.1],\n  'nanobar': [8, 0.0001],\n  'nanobars': [8, 0.0001],\n  'nbar': [8, 0.0001],\n  'picobar': [8, 1e-7],\n  'picobars': [8, 1e-7],\n  'pbar': [8, 1e-7],\n  'femtobar': [8, 1e-10],\n  'femtobars': [8, 1e-10],\n  'fbar': [8, 1e-10],\n  'torr': [8, 133.32236842105263157895],\n  'torrs': [8, 133.32236842105263157895],\n  'Torr': [8, 133.32236842105263157895],\n  'millitorr': [8, 0.13332236842105263158],\n  'mTorr': [8, 0.13332236842105263158],\n  'atmosphere': [8, 101325],\n  'atmospheres': [8, 101325],\n  'atm': [8, 101325],\n  'pound per square inch': [8, 6894.757],\n  'pounds per square inch': [8, 6894.757],\n  'psi': [8, 6894.757],\n  'lbf/in2': [8, 6894.757],\n  'lbf/in²': [8, 6894.757],\n  'kelvin': [9, 1],\n  'kelvins': [9, 1],\n  'K': [9, 1],\n  'petakelvin': [9, 1000000000000000],\n  'petakelvins': [9, 1000000000000000],\n  'PK': [9, 1000000000000000],\n  'terakelvin': [9, 1000000000000],\n  'terakelvins': [9, 1000000000000],\n  'TK': [9, 1000000000000],\n  'gigakelvin': [9, 1000000000],\n  'gigakelvins': [9, 1000000000],\n  'GK': [9, 1000000000],\n  'megakelvin': [9, 1000000],\n  'megakelvins': [9, 1000000],\n  'MK': [9, 1000000],\n  'kilokelvin': [9, 1000],\n  'kilokelvins': [9, 1000],\n  'kK': [9, 1000],\n  'hectokelvin': [9, 100],\n  'hectokelvins': [9, 100],\n  'hK': [9, 100],\n  'decakelvin': [9, 10],\n  'decakelvins': [9, 10],\n  'daK': [9, 10],\n  'decikelvin': [9, 0.1],\n  'decikelvins': [9, 0.1],\n  'dK': [9, 0.1],\n  'centikelvin': [9, 0.01],\n  'centikelvins': [9, 0.01],\n  'cK': [9, 0.01],\n  'millikelvin': [9, 0.001],\n  'millikelvins': [9, 0.001],\n  'mK': [9, 0.001],\n  'microkelvin': [9, 0.000001],\n  'microkelvins': [9, 0.000001],\n  'μK': [9, 0.000001],\n  'µK': [9, 0.000001],\n  'nanokelvin': [9, 1e-9],\n  'nanokelvins': [9, 1e-9],\n  'nK': [9, 1e-9],\n  'picokelvin': [9, 1e-12],\n  'picokelvins': [9, 1e-12],\n  'pK': [9, 1e-12],\n  'femtokelvin': [9, 1e-15],\n  'femtokelvins': [9, 1e-15],\n  'fK': [9, 1e-15],\n  'fahrenheit': [9, 0.5555555555555556],\n  'F': [9, 0.5555555555555556],\n  'celsius': [9, 1],\n  'C': [9, 1],\n  'rankine': [9, 0.5555555555555556],\n  'R': [9, 0.5555555555555556],\n  'second': [10, 1],\n  'seconds': [10, 1],\n  's': [10, 1],\n  'petasecond': [10, 1000000000000000],\n  'petaseconds': [10, 1000000000000000],\n  'Ps': [10, 1000000000000000],\n  'terasecond': [10, 1000000000000],\n  'teraseconds': [10, 1000000000000],\n  'Ts': [10, 1000000000000],\n  'gigasecond': [10, 1000000000],\n  'gigaseconds': [10, 1000000000],\n  'Gs': [10, 1000000000],\n  'megasecond': [10, 1000000],\n  'megaseconds': [10, 1000000],\n  'Ms': [10, 1000000],\n  'kilosecond': [10, 1000],\n  'kiloseconds': [10, 1000],\n  'ks': [10, 1000],\n  'hectosecond': [10, 100],\n  'hectoseconds': [10, 100],\n  'hs': [10, 100],\n  'decasecond': [10, 10],\n  'decaseconds': [10, 10],\n  'das': [10, 10],\n  'decisecond': [10, 0.1],\n  'deciseconds': [10, 0.1],\n  'ds': [10, 0.1],\n  'centisecond': [10, 0.01],\n  'centiseconds': [10, 0.01],\n  'cs': [10, 0.01],\n  'millisecond': [10, 0.001],\n  'milliseconds': [10, 0.001],\n  'ms': [10, 0.001],\n  'microsecond': [10, 0.000001],\n  'microseconds': [10, 0.000001],\n  'μs': [10, 0.000001],\n  'µs': [10, 0.000001],\n  'nanosecond': [10, 1e-9],\n  'nanoseconds': [10, 1e-9],\n  'ns': [10, 1e-9],\n  'picosecond': [10, 1e-12],\n  'picoseconds': [10, 1e-12],\n  'ps': [10, 1e-12],\n  'femtosecond': [10, 1e-15],\n  'femtoseconds': [10, 1e-15],\n  'fs': [10, 1e-15],\n  'minute': [10, 60],\n  'minutes': [10, 60],\n  'min': [10, 60],\n  'hour': [10, 3600],\n  'hours': [10, 3600],\n  'h': [10, 3600],\n  'milliday': [10, 86.4],\n  'millidays': [10, 86.4],\n  'md': [10, 86.4],\n  'day': [10, 86400],\n  'days': [10, 86400],\n  'd': [10, 86400],\n  'week': [10, 604800],\n  'weeks': [10, 604800],\n  'wk': [10, 604800],\n  'fortnight': [10, 1209600],\n  'fortnights': [10, 1209600],\n  'fn': [10, 1209600],\n  'month': [10, 2592000],\n  'months': [10, 2592000],\n  'mo': [10, 2592000],\n  'year': [10, 31536000],\n  'years': [10, 31536000],\n  'a': [10, 31536000],\n  'y': [10, 31536000],\n  'yr': [10, 31536000],\n  'decade': [10, 315569520],\n  'decades': [10, 315569520],\n  'dec': [10, 315569520],\n  'century': [10, 3155695200],\n  'centuries': [10, 3155695200],\n  'millennium': [10, 31556952000],\n  'millennia': [10, 31556952000],\n  'moment': [10, 90],\n  'moments': [10, 90],\n  'shake': [10, 1e-8],\n  'shakes': [10, 1e-8],\n  'time unit': [10, 0.001024],\n  'TU': [10, 0.001024],\n  'svedberg': [10, 1e-13],\n  'svedbergs': [10, 1e-13],\n  'S': [10, 1e-13],\n  'cubic meter': [11, 1],\n  'cubic meters': [11, 1],\n  'cubic metre': [11, 1],\n  'cubic metres': [11, 1],\n  'stere': [11, 1],\n  'steres': [11, 1],\n  'm³': [11, 1],\n  'm3': [11, 1],\n  'cubic petameter': [11, 1e+45],\n  'cubic petameters': [11, 1e+45],\n  'Pm3': [11, 1e+45],\n  'Pm³': [11, 1e+45],\n  'cubic terameter': [11, 1e+36],\n  'cubic terameters': [11, 1e+36],\n  'Tm3': [11, 1e+36],\n  'Tm³': [11, 1e+36],\n  'cubic gigameter': [11, 1e+27],\n  'cubic gigameters': [11, 1e+27],\n  'Gm3': [11, 1e+27],\n  'Gm³': [11, 1e+27],\n  'cubic megameter': [11, 1000000000000000000],\n  'cubic megameters': [11, 1000000000000000000],\n  'Mm3': [11, 1000000000000000000],\n  'Mm³': [11, 1000000000000000000],\n  'cubic kilometer': [11, 1000000000],\n  'cubic kilometers': [11, 1000000000],\n  'km3': [11, 1000000000],\n  'km³': [11, 1000000000],\n  'cubic hectometer': [11, 1000000],\n  'cubic hectometers': [11, 1000000],\n  'hm3': [11, 1000000],\n  'hm³': [11, 1000000],\n  'cubic decameter': [11, 1000],\n  'cubic decameters': [11, 1000],\n  'dam3': [11, 1000],\n  'dam³': [11, 1000],\n  'cubic decimeter': [11, 0.001],\n  'cubic decimeters': [11, 0.001],\n  'dm3': [11, 0.001],\n  'dm³': [11, 0.001],\n  'cubic centimeter': [11, 0.000001],\n  'cubic centimeters': [11, 0.000001],\n  'cm3': [11, 0.000001],\n  'cm³': [11, 0.000001],\n  'cubic millimeter': [11, 1e-9],\n  'cubic millimeters': [11, 1e-9],\n  'mm3': [11, 1e-9],\n  'mm³': [11, 1e-9],\n  'cubic micrometer': [11, 1e-18],\n  'cubic micrometers': [11, 1e-18],\n  'μm3': [11, 1e-18],\n  'µm3': [11, 1e-18],\n  'μm³': [11, 1e-18],\n  'µm³': [11, 1e-18],\n  'cubic nanometer': [11, 1e-27],\n  'cubic nanometers': [11, 1e-27],\n  'nm3': [11, 1e-27],\n  'nm³': [11, 1e-27],\n  'cubic picometer': [11, 1e-36],\n  'cubic picometers': [11, 1e-36],\n  'pm3': [11, 1e-36],\n  'pm³': [11, 1e-36],\n  'cubic femtometer': [11, 1e-45],\n  'cubic femtometers': [11, 1e-45],\n  'fm3': [11, 1e-45],\n  'fm³': [11, 1e-45],\n  'liter': [11, 0.001],\n  'liters': [11, 0.001],\n  'litre': [11, 0.001],\n  'litres': [11, 0.001],\n  'l': [11, 0.001],\n  'L': [11, 0.001],\n  'petaliter': [11, 1000000000000],\n  'petaliters': [11, 1000000000000],\n  'petalitre': [11, 1000000000000],\n  'petalitres': [11, 1000000000000],\n  'Pl': [11, 1000000000000],\n  'PL': [11, 1000000000000],\n  'teraliter': [11, 1000000000],\n  'teraliters': [11, 1000000000],\n  'teralitre': [11, 1000000000],\n  'teralitres': [11, 1000000000],\n  'Tl': [11, 1000000000],\n  'TL': [11, 1000000000],\n  'gigaliter': [11, 1000000],\n  'gigaliters': [11, 1000000],\n  'gigalitre': [11, 1000000],\n  'gigalitres': [11, 1000000],\n  'Gl': [11, 1000000],\n  'GL': [11, 1000000],\n  'megaliter': [11, 1000],\n  'megaliters': [11, 1000],\n  'megalitre': [11, 1000],\n  'megalitres': [11, 1000],\n  'Ml': [11, 1000],\n  'ML': [11, 1000],\n  'kiloliter': [11, 1],\n  'kiloliters': [11, 1],\n  'kilolitre': [11, 1],\n  'kilolitres': [11, 1],\n  'kl': [11, 1],\n  'kL': [11, 1],\n  'hectoliter': [11, 0.1],\n  'hectoliters': [11, 0.1],\n  'hectolitre': [11, 0.1],\n  'hectolitres': [11, 0.1],\n  'hl': [11, 0.1],\n  'hL': [11, 0.1],\n  'decaliter': [11, 0.01],\n  'decaliters': [11, 0.01],\n  'decalitre': [11, 0.01],\n  'decalitres': [11, 0.01],\n  'dal': [11, 0.01],\n  'daL': [11, 0.01],\n  'deciliter': [11, 0.0001],\n  'deciliters': [11, 0.0001],\n  'decilitre': [11, 0.0001],\n  'decilitres': [11, 0.0001],\n  'dl': [11, 0.0001],\n  'dL': [11, 0.0001],\n  'centiliter': [11, 0.00001],\n  'centiliters': [11, 0.00001],\n  'centilitre': [11, 0.00001],\n  'centilitres': [11, 0.00001],\n  'cl': [11, 0.00001],\n  'cL': [11, 0.00001],\n  'milliliter': [11, 0.000001],\n  'milliliters': [11, 0.000001],\n  'millilitre': [11, 0.000001],\n  'millilitres': [11, 0.000001],\n  'ml': [11, 0.000001],\n  'mL': [11, 0.000001],\n  'microliter': [11, 1e-9],\n  'microliters': [11, 1e-9],\n  'microlitre': [11, 1e-9],\n  'microlitres': [11, 1e-9],\n  'μl': [11, 1e-9],\n  'µl': [11, 1e-9],\n  'μL': [11, 1e-9],\n  'µL': [11, 1e-9],\n  'nanoliter': [11, 1e-12],\n  'nanoliters': [11, 1e-12],\n  'nanolitre': [11, 1e-12],\n  'nanolitres': [11, 1e-12],\n  'nl': [11, 1e-12],\n  'nL': [11, 1e-12],\n  'picoliter': [11, 1e-15],\n  'picoliters': [11, 1e-15],\n  'picolitre': [11, 1e-15],\n  'picolitres': [11, 1e-15],\n  'pl': [11, 1e-15],\n  'pL': [11, 1e-15],\n  'femtoliter': [11, 1e-18],\n  'femtoliters': [11, 1e-18],\n  'femtolitre': [11, 1e-18],\n  'femtolitres': [11, 1e-18],\n  'fl': [11, 1e-18],\n  'fL': [11, 1e-18],\n  'cubic mile': [11, 4200],\n  'cubic miles': [11, 4200],\n  'cu mi': [11, 4200],\n  'mi3': [11, 4200],\n  'mi³': [11, 4200],\n  'acre-foot': [11, 1233.48183754752],\n  'acre-feet': [11, 1233.48183754752],\n  'ac⋅ft': [11, 1233.48183754752],\n  'ac ft': [11, 1233.48183754752],\n  'cubic yard': [11, 0.764554857984],\n  'cubic yards': [11, 0.764554857984],\n  'cu yd': [11, 0.764554857984],\n  'yd3': [11, 0.764554857984],\n  'yd³': [11, 0.764554857984],\n  'cubic foot': [11, 0.028316846592],\n  'cubic feet': [11, 0.028316846592],\n  'cu ft': [11, 0.028316846592],\n  'ft3': [11, 0.028316846592],\n  'ft³': [11, 0.028316846592],\n  'board foot': [11, 0.002359737],\n  'board feet': [11, 0.002359737],\n  'cubic inch': [11, 0.000016387064],\n  'cubic inches': [11, 0.000016387064],\n  'cu in': [11, 0.000016387064],\n  'in3': [11, 0.000016387064],\n  'in³': [11, 0.000016387064],\n  'measurement ton': [11, 1.133],\n  'measurement tons': [11, 1.133],\n  'MTON': [11, 1.133],\n  'imperial barrel': [11, 0.16],\n  'imperial barrels': [11, 0.16],\n  'imp bbl': [11, 0.16],\n  'imperial bushel': [11, 0.03636872],\n  'imperial bushels': [11, 0.03636872],\n  'imp bsh': [11, 0.03636872],\n  'imp bu': [11, 0.03636872],\n  'imperial peck': [11, 0.00909218],\n  'imperial pecks': [11, 0.00909218],\n  'pk': [11, 0.00909218],\n  'imp pk': [11, 0.00909218],\n  'imperial gallon': [11, 0.00454609],\n  'imperial gallons': [11, 0.00454609],\n  'imp gal': [11, 0.00454609],\n  'imperial quart': [11, 0.0011365225],\n  'imperial quarts': [11, 0.0011365225],\n  'imp qt': [11, 0.0011365225],\n  'imperial pint': [11, 0.00056826125],\n  'imperial pints': [11, 0.00056826125],\n  'imp pt': [11, 0.00056826125],\n  'imperial fluid ounce': [11, 0.0000284130625],\n  'imperial fluid ounces': [11, 0.0000284130625],\n  'imp fl oz': [11, 0.0000284130625],\n  'teaspoon': [11, 0.00000492892159375],\n  'teaspoons': [11, 0.00000492892159375],\n  'US teaspoon': [11, 0.00000492892159375],\n  'US teaspoons': [11, 0.00000492892159375],\n  'tsp': [11, 0.00000492892159375],\n  'tablespoon': [11, 0.00001478676478125],\n  'tablespoons': [11, 0.00001478676478125],\n  'US tablespoon': [11, 0.00001478676478125],\n  'US tablespoons': [11, 0.00001478676478125],\n  'tbsp': [11, 0.00001478676478125],\n  'US fluid ounce': [11, 0.0000295735295625],\n  'US fluid ounces': [11, 0.0000295735295625],\n  'fl oz': [11, 0.0000295735295625],\n  'fl. oz.': [11, 0.0000295735295625],\n  'oz. fl.': [11, 0.0000295735295625],\n  'cup': [11, 0.0002365882365],\n  'cups': [11, 0.0002365882365],\n  'c': [11, 0.0002365882365],\n  'US legal cup': [11, 0.00024],\n  'US legal cups': [11, 0.00024],\n  'US lc': [11, 0.00024],\n  'pint': [11, 0.000473176473],\n  'pints': [11, 0.000473176473],\n  'US liquid pint': [11, 0.000473176473],\n  'US liquid pints': [11, 0.000473176473],\n  'pt': [11, 0.000473176473],\n  'p': [11, 0.000473176473],\n  'quart': [11, 0.000946352946],\n  'quarts': [11, 0.000946352946],\n  'US liquid quart': [11, 0.000946352946],\n  'US liquid quarts': [11, 0.000946352946],\n  'qt': [11, 0.000946352946],\n  'gallon': [11, 0.003785411784],\n  'gallons': [11, 0.003785411784],\n  'US liquid gallon': [11, 0.003785411784],\n  'US liquid gallons': [11, 0.003785411784],\n  'gal': [11, 0.003785411784],\n  'US bushel': [11, 0.03523907016688],\n  'US bushels': [11, 0.03523907016688],\n  'US bsh': [11, 0.03523907016688],\n  'US bu': [11, 0.03523907016688],\n  'US peck': [11, 0.00880976754172],\n  'US pk': [11, 0.00880976754172],\n  'US dry gallon': [11, 0.00440488377086],\n  'US dry gal': [11, 0.00440488377086],\n  'US dry barrel': [11, 0.1156],\n  'US dry barrels': [11, 0.1156],\n  'US dry bbl': [11, 0.1156],\n  'US dry quart': [11, 0.001101220942715],\n  'US dry qt': [11, 0.001101220942715],\n  'US dry pint': [11, 0.0005506104713575],\n  'US dry pt': [11, 0.0005506104713575],\n} as const;\n\nexport const differences = {\n  'fahrenheit': 459.67,\n  'F': 459.67,\n  'celsius': 273.15,\n  'C': 273.15,\n} as const;", "import type { BestKind, MeasureKind } from '../conversions/types';\nimport { bestUnits } from '../generated/best-units';\nimport { differences, unitsObject } from '../generated/parse-unit';\nimport type { BestConversion, Converter } from '../types/converter';\nimport type { BestUnitsForUnit, MeasuresByUnit, Unit } from '../types/units';\nimport type { LiteralToPrimitive } from '../types/utils';\n\n// Importing MeasureKind will cause the entire enum to be included in the output, which increases bundle size\n// This workaround allows me to just hardcode the value, but ensures it doesn't become inaccurate if the enum changes\nconst MeasureKindTime: MeasureKind.Time = 10;\n\n// biome-ignore lint/complexity/noExcessiveCognitiveComplexity: No easy way to reduce complexity\nfunction convertTo<Q extends number | bigint>(from: string, quantity: Q, to: string): LiteralToPrimitive<Q> {\n\tlet parsedTo = unitsObject[to as Unit];\n\n\tif (!parsedTo) {\n\t\tthrow new RangeError(`${to} is not a valid unit`);\n\t}\n\n\tlet parsedFrom = unitsObject[from as Unit];\n\n\tif (parsedFrom[0] !== parsedTo[0]) {\n\t\tif (parsedFrom[0] === MeasureKindTime && to === 'm') {\n\t\t\t// Going from time to meters, you meant to do minutes\n\t\t\tparsedTo = unitsObject.min;\n\t\t} else if (from === 'm' && parsedTo[0] === MeasureKindTime) {\n\t\t\tparsedFrom = unitsObject.min;\n\t\t} else {\n\t\t\tthrow new RangeError(`Cannot convert between different measures: ${from} and ${to}`);\n\t\t}\n\t}\n\n\tconst fromRatio = parsedFrom[1];\n\tconst toRatio = parsedTo[1];\n\n\tif (typeof quantity === 'bigint') {\n\t\tif (\n\t\t\t(from in differences || to in differences) &&\n\t\t\tdifferences[from as keyof typeof differences] !== differences[to as keyof typeof differences]\n\t\t) {\n\t\t\tthrow new RangeError(\n\t\t\t\t`Conversion for ${from} to ${to} cannot be calculated as one of the units has a conversion difference which cannot be expressed with bigints`,\n\t\t\t);\n\t\t}\n\n\t\treturn ((quantity * BigInt(fromRatio)) / BigInt(toRatio)) as LiteralToPrimitive<Q>;\n\t}\n\n\tif (from in differences) {\n\t\tif (to in differences) {\n\t\t\treturn (((quantity as number) + differences[from as keyof typeof differences]) * (fromRatio / toRatio) -\n\t\t\t\tdifferences[to as keyof typeof differences]) as LiteralToPrimitive<Q>;\n\t\t}\n\n\t\treturn (((quantity as number) + differences[from as keyof typeof differences]) *\n\t\t\t(fromRatio / toRatio)) as LiteralToPrimitive<Q>;\n\t}\n\n\tif (to in differences) {\n\t\treturn (quantity * (fromRatio / toRatio) - differences[to as keyof typeof differences]) as LiteralToPrimitive<Q>;\n\t}\n\n\treturn (quantity * (fromRatio / toRatio)) as LiteralToPrimitive<Q>;\n}\n\nfunction convertToBest<Q extends number | bigint, U extends Unit>(\n\tquantity: Q,\n\tfrom: U,\n\tkind: BestKind,\n): BestConversion<Q, BestUnitsForUnit<U>> {\n\tconst fromMeasure = unitsObject[from][0];\n\tconst best = bestUnits[kind === 'imperial' ? 1 : 0][fromMeasure];\n\n\tconst smallestUnit = best[0][0];\n\n\tlet bestUnit = smallestUnit as BestUnitsForUnit<U>;\n\n\tconst baseQuantity = convertTo(from, quantity, smallestUnit);\n\tconst absQuantity = baseQuantity < 0 ? -baseQuantity : baseQuantity;\n\n\tfor (let i = 0; i < best.length; i++) {\n\t\t// biome-ignore lint/style/noNonNullAssertion: This is safe because we know the best array is not empty\n\t\tconst bestEntry = best[i]!;\n\n\t\tif (absQuantity >= bestEntry[1]) {\n\t\t\tbestUnit = bestEntry[0] as BestUnitsForUnit<U>;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst result = convertTo(from, quantity, bestUnit);\n\n\treturn {\n\t\tquantity: result,\n\t\tunit: bestUnit,\n\t\ttoString: (toFixed?: number) =>\n\t\t\t`${typeof result === 'bigint' || toFixed === undefined ? result : result.toFixed(toFixed)} ${bestUnit}` as `${LiteralToPrimitive<Q>} ${BestUnitsForUnit<U>}`,\n\t};\n}\n\ntype ConverterThis<Q extends number | bigint, U extends Unit> = {\n\t_quantity: Q;\n\t_from: U;\n};\n\nfunction convertToAny<Q extends number | bigint, U extends Unit>(\n\tthis: ConverterThis<Q, U>,\n\tto: MeasuresByUnit<U>,\n): LiteralToPrimitive<Q>;\nfunction convertToAny<Q extends number | bigint, U extends Unit, K extends BestKind = 'metric'>(\n\tthis: ConverterThis<Q, U>,\n\tto: 'best',\n\tkind?: K | undefined,\n): BestConversion<Q, BestUnitsForUnit<U>>;\nfunction convertToAny<Q extends number | bigint, U extends Unit, K extends BestKind = 'metric'>(\n\tthis: ConverterThis<Q, U>,\n\tto: MeasuresByUnit<U> | 'best',\n\tkind?: K | undefined,\n): LiteralToPrimitive<Q> | BestConversion<Q, BestUnitsForUnit<U>> {\n\tif (to === 'best') {\n\t\treturn convertToBest(this._quantity, this._from, kind ?? 'metric');\n\t}\n\n\treturn convertTo(this._from, this._quantity, to);\n}\n\n/**\n * Convert a given quantity of a unit into another unit.\n *\n * @param quantity - The quantity of the `from` unit you want to convert\n * @param from - The unit you are converting from\n *\n * @returns An object you can use to convert the provided quantity\n *\n * @public\n */\nexport function convert<Q extends number | bigint, U extends Unit>(\n\tquantity: Q,\n\tfrom: U,\n): Converter<Q, MeasuresByUnit<U>> {\n\tif (!(from in unitsObject)) {\n\t\tthrow new RangeError(`${from} is not a valid unit`);\n\t}\n\n\treturn {\n\t\tto: convertToAny.bind({ _quantity: quantity, _from: from }),\n\t} as Converter<Q, MeasuresByUnit<U>>;\n}\n", "import type { BestKind } from '../conversions/types';\nimport type { BestConversion, Converter } from '../types/converter';\nimport { convert } from './convert';\n\nimport type { BestUnits, Unit } from '../types/units';\n\nconst splitExpression = /(-?(?:\\d+)?\\.?\\d+)\\s?(\\S+)/g;\n\ntype ConverterThis = {\n\t_search: RegExpExecArray;\n\t_value: string;\n};\n\nfunction to(this: ConverterThis, unit: Unit | 'best', kind?: BestKind | undefined) {\n\tconst isBest = unit === 'best';\n\n\tlet result = 0;\n\tlet resolvedUnit: BestUnits;\n\tlet isFirstPass = true;\n\n\tdo {\n\t\tconst converted = convert(Number(this._search[1]), this._search[2] as Unit).to(\n\t\t\t// biome-ignore lint/style/noNonNullAssertion:\n\t\t\t(isBest && !isFirstPass ? resolvedUnit! : unit) as Unit,\n\t\t) as number | BestConversion<number, BestUnits>;\n\n\t\tif (isBest && isFirstPass) {\n\t\t\tresult += (converted as BestConversion<number, BestUnits>).quantity;\n\t\t\tresolvedUnit = (converted as BestConversion<number, BestUnits>).unit;\n\t\t\tisFirstPass = false;\n\t\t} else {\n\t\t\tresult += converted as number;\n\t\t}\n\n\t\t// biome-ignore lint/style/noNonNullAssertion:\n\t\tthis._search = splitExpression.exec(this._value)!;\n\t} while (this._search);\n\n\tif (isBest) {\n\t\t// biome-ignore lint/style/noNonNullAssertion:\n\t\treturn convert(result, resolvedUnit!).to('best', kind);\n\t}\n\n\treturn result;\n}\n\n/**\n * Convert several values in a string into a single unit.\n *\n * @example\n * ```ts\n * convertMany('1d 12h').to('hours') === 36;\n * ```\n *\n * @param value - The string to parse as values\n *\n * @public\n */\nexport function convertMany(value: string): Converter<number, Unit> {\n\tsplitExpression.lastIndex = 0;\n\tconst search = splitExpression.exec(value);\n\n\tif (!search) {\n\t\tthrow new RangeError(`value did not match expression ${splitExpression.source}`);\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\treturn {\n\t\tto: to.bind({\n\t\t\t_search: search,\n\t\t\t_value: value,\n\t\t}),\n\t} as Converter<number, Unit>;\n}\n", "import type { MeasureKind } from '../conversions/types';\nimport { unitsObject } from '../generated/parse-unit';\nimport type { MeasureKindByUnit, Unit } from '../types/units';\n\n/**\n * Get the {@link MeasureKind} associated with a unit.\n *\n * @example\n * ```ts\n * getMeasure('m'); // MeasureKind.Length\n * ```\n * @example\n * ```ts\n * getMeasure('invalid'); // undefined\n * ```\n *\n * @param unit - The unit you want to get the measure kind of\n * @returns The {@link MeasureKind} corresponding to this unit of measure, or `undefined` if the unit is invalid\n *\n * @public\n */\nexport function getMeasureKind<U extends Unit>(unit: U): MeasureKindByUnit<U>;\n/**\n * Get the {@link MeasureKind} associated with a unit.\n *\n * @example\n * ```ts\n * getMeasure('m'); // MeasureKind.Length\n * ```\n * @example\n * ```ts\n * getMeasure('invalid'); // undefined\n * ```\n *\n * @param unit - The unit you want to get the measure kind of\n * @returns The {@link MeasureKind} corresponding to this unit of measure, or `undefined` if the unit is invalid\n *\n * @public\n */\nexport function getMeasureKind(unit: string): MeasureKind | undefined;\nexport function getMeasureKind<U extends Unit>(unit: U): MeasureKindByUnit<U> | undefined {\n\tconst unitObject = unitsObject[unit];\n\n\tif (unitObject) {\n\t\treturn unitObject[0] as MeasureKindByUnit<U>;\n\t}\n\n\t// Needed to appease tsc\n\treturn;\n}\n", "import type { MeasureKind } from '../conversions/types';\nimport type { BestUnitsForMeasure } from '../types/units';\nimport type { LiteralToPrimitive } from '../types/utils';\nimport { convert } from './convert';\nimport { convertMany } from './convert-many';\n\n/**\n * Convert a given duration of milliseconds to a string that best represents it.\n *\n * If you are very concerned about performance you should use the {@link convertMany} function directly.\n *\n * @example\n * ```ts\n * ms(-3 * 60000); // '-3min'\n * ```\n *\n * @param quantity - Duration of milliseconds to convert\n *\n * @returns A duration string\n *\n * @public\n */\nexport function ms<Q extends number | bigint>(\n\tquantity: Q,\n): `${LiteralToPrimitive<Q>}${BestUnitsForMeasure<MeasureKind.Time>}`;\n/**\n * Convert a duration string to a duration in milliseconds.\n *\n * If you are very concerned about performance you should use the {@link convertMany} function directly.\n *\n * @example\n * ```ts\n * ms('1d 2h 30min'); // 95400000\n * ```\n *\n * @param value - Duration string to convert\n *\n * @returns A duration in milliseconds\n *\n * @public\n */\nexport function ms(value: string): number;\nexport function ms<Q extends number | bigint>(\n\tvalue: Q | string,\n): number | `${LiteralToPrimitive<Q>} ${BestUnitsForMeasure<MeasureKind.Time>}` {\n\tif (typeof value === 'string') {\n\t\treturn convertMany(value).to('ms');\n\t}\n\n\treturn convert(value, 'ms').to('best').toString();\n}\n"],
  "mappings": "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",
  "names": ["bestUnits", "unitsObject", "radian", "radians", "rad", "rads", "r", "turn", "Math", "PI", "turns", "degree", "degrees", "deg", "degs", "gradian", "gradians", "gon", "gons", "grad", "grads", "grade", "grades", "m2", "Pm2", "Tm2", "Gm2", "Mm2", "km2", "hm2", "dam2", "dm2", "cm2", "mm2", "nm2", "pm2", "fm2", "acre", "acres", "ac", "centiare", "centiares", "ca", "deciare", "deciares", "da", "are", "ares", "decare", "decares", "daa", "hectare", "hectares", "ha", "ft2", "in2", "yd2", "mi2", "bit", "bits", "b", "pebibit", "pebibits", "Pib", "tebibit", "tebibits", "Tib", "gibibit", "gibibits", "Gib", "mebibit", "mebibits", "Mib", "kibibit", "kibibits", "Kib", "Kb", "KB", "petabit", "petabits", "Pb", "terabit", "terabits", "Tb", "gigabit", "gigabits", "Gb", "megabit", "megabits", "Mb", "kilobit", "kilobits", "kb", "hectobit", "hectobits", "hb", "decabit", "decabits", "dab", "decibit", "decibits", "db", "centibit", "centibits", "cb", "millibit", "millibits", "mb", "microbit", "microbits", "nanobit", "nanobits", "nb", "picobit", "picobits", "pb", "femtobit", "femtobits", "fb", "nibble", "nibbles", "semioctet", "semioctets", "halfbyte", "halfbytes", "byte", "bytes", "octect", "octects", "B", "pebibyte", "pebibytes", "PiB", "tebibyte", "tebibytes", "TiB", "gibibyte", "gibibytes", "GiB", "mebibyte", "mebibytes", "MiB", "kibibyte", "kibibytes", "KiB", "petabyte", "petabytes", "PB", "terabyte", "terabytes", "TB", "gigabyte", "gigabytes", "GB", "megabyte", "megabytes", "MB", "kilobyte", "kilobytes", "kB", "hectobyte", "hectobytes", "hB", "decabyte", "decabytes", "daB", "decibyte", "decibytes", "dB", "centibyte", "centibytes", "cB", "millibyte", "millibytes", "mB", "microbyte", "microbytes", "nanobyte", "nanobytes", "nB", "picobyte", "picobytes", "pB", "femtobyte", "femtobytes", "fB", "hextet", "hextets", "joule", "joules", "J", "petajoule", "petajoules", "PJ", "terajoule", "terajoules", "TJ", "gigajoule", "gigajoules", "GJ", "megajoule", "megajoules", "MJ", "kilojoule", "kilojoules", "kJ", "hectojoule", "hectojoules", "hJ", "decajoule", "decajoules", "daJ", "decijoule", "decijoules", "dJ", "centijoule", "centijoules", "cJ", "millijoule", "millijoules", "mJ", "microjoule", "microjoules", "nanojoule", "nanojoules", "nJ", "picojoule", "picojoules", "pJ", "femtojoule", "femtojoules", "fJ", "Wh", "PWh", "TWh", "GWh", "MWh", "kWh", "hWh", "daWh", "dWh", "cWh", "mWh", "nWh", "pWh", "fWh", "newton", "newtons", "N", "petanewton", "petanewtons", "PN", "teranewton", "teranewtons", "TN", "giganewton", "giganewtons", "GN", "meganewton", "meganewtons", "MN", "kilonewton", "kilonewtons", "kN", "hectonewton", "hectonewtons", "hN", "decanewton", "decanewtons", "daN", "decinewton", "decinewtons", "dN", "centinewton", "centinewtons", "cN", "millinewton", "millinewtons", "mN", "micronewton", "micronewtons", "nanonewton", "nanonewtons", "nN", "piconewton", "piconewtons", "pN", "femtonewton", "femtonewtons", "fN", "dyne", "dynes", "dyn", "lbf", "kip", "klb", "kipf", "klbf", "poundal", "poundals", "pdl", "kilopond", "kiloponds", "kgf", "kp", "megapond", "tf", "Mp", "meter", "meters", "metre", "metres", "m", "petameter", "petametre", "petameters", "petametres", "Pm", "terameter", "terametre", "terameters", "terametres", "Tm", "gigameter", "gigametre", "gigameters", "gigametres", "Gm", "megameter", "megametre", "megameters", "megametres", "Mm", "kilometer", "kilometre", "kilometers", "kilometres", "km", "hectometer", "hectometre", "hectometers", "hectometres", "hm", "decameter", "decametre", "decameters", "decametres", "dam", "decimeter", "decimetre", "decimeters", "decimetres", "dm", "centimeter", "centimetre", "centimeters", "centimetres", "cm", "millimeter", "millimetre", "millimeters", "millimetres", "mm", "micrometer", "micrometre", "micrometers", "micrometres", "nanometer", "nanometre", "nanometers", "nanometres", "nm", "picometer", "picometre", "picometers", "picometres", "pm", "femtometer", "femtometre", "femtometers", "femtometres", "fm", "foot", "feet", "ft", "inch", "inches", "in", "yard", "yards", "yd", "mile", "miles", "mi", "M", "NM", "nmi", "ly", "pica", "picas", "pc", "point", "points", "gram", "grams", "g", "petagram", "petagrams", "Pg", "teragram", "teragrams", "Tg", "gigagram", "gigagrams", "Gg", "megagram", "megagrams", "Mg", "kilogram", "kilograms", "kg", "hectogram", "hectograms", "hg", "decagram", "decagrams", "dag", "decigram", "decigrams", "dg", "centigram", "centigrams", "cg", "milligram", "milligrams", "mg", "microgram", "micrograms", "nanogram", "nanograms", "ng", "picogram", "picograms", "pg", "femtogram", "femtograms", "fg", "tonne", "tonnes", "t", "kilotonne", "kilotonnes", "kt", "megatonne", "megatonnes", "Mt", "gigatonne", "gigatonnes", "Gt", "pound", "pounds", "lb", "lbs", "stone", "stones", "st", "ounce", "ounces", "oz", "watt", "watts", "W", "petawatt", "petawatts", "PW", "terawatt", "terawatts", "TW", "gigawatt", "gigawatts", "GW", "megawatt", "megawatts", "MW", "kilowatt", "kilowatts", "kW", "hectowatt", "hectowatts", "hW", "decawatt", "decawatts", "daW", "deciwatt", "deciwatts", "dW", "centiwatt", "centiwatts", "cW", "milliwatt", "milliwatts", "mW", "microwatt", "microwatts", "nanowatt", "nanowatts", "nW", "picowatt", "picowatts", "pW", "femtowatt", "femtowatts", "fW", "horsepower", "hp", "pascal", "pascals", "Pa", "petapascal", "petapascals", "PPa", "terapascal", "terapascals", "TPa", "gigapascal", "gigapascals", "GPa", "megapascal", "megapascals", "MPa", "kilopascal", "kilopascals", "kPa", "hectopascal", "hectopascals", "hPa", "decapascal", "decapascals", "daPa", "decipascal", "decipascals", "dPa", "centipascal", "centipascals", "cPa", "millipascal", "millipascals", "mPa", "micropascal", "micropascals", "nanopascal", "nanopascals", "nPa", "picopascal", "picopascals", "pPa", "femtopascal", "femtopascals", "fPa", "bar", "bars", "petabar", "petabars", "Pbar", "terabar", "terabars", "Tbar", "gigabar", "gigabars", "Gbar", "megabar", "megabars", "Mbar", "kilobar", "kilobars", "kbar", "hectobar", "hectobars", "hbar", "decabar", "decabars", "dabar", "decibar", "decibars", "dbar", "centibar", "centibars", "cbar", "millibar", "millibars", "mbar", "microbar", "microbars", "nanobar", "nanobars", "nbar", "picobar", "picobars", "pbar", "femtobar", "femtobars", "fbar", "torr", "torrs", "Torr", "millitorr", "mTorr", "atmosphere", "atmospheres", "atm", "psi", "kelvin", "kelvins", "K", "petakelvin", "petakelvins", "PK", "terakelvin", "terakelvins", "TK", "gigakelvin", "gigakelvins", "GK", "megakelvin", "megakelvins", "MK", "kilokelvin", "kilokelvins", "kK", "hectokelvin", "hectokelvins", "hK", "decakelvin", "decakelvins", "daK", "decikelvin", "decikelvins", "dK", "centikelvin", "centikelvins", "cK", "millikelvin", "millikelvins", "mK", "microkelvin", "microkelvins", "nanokelvin", "nanokelvins", "nK", "picokelvin", "picokelvins", "pK", "femtokelvin", "femtokelvins", "fK", "fahrenheit", "F", "celsius", "C", "rankine", "R", "second", "seconds", "s", "petasecond", "petaseconds", "Ps", "terasecond", "teraseconds", "Ts", "gigasecond", "gigaseconds", "Gs", "megasecond", "megaseconds", "Ms", "kilosecond", "kiloseconds", "ks", "hectosecond", "hectoseconds", "hs", "decasecond", "decaseconds", "das", "decisecond", "deciseconds", "ds", "centisecond", "centiseconds", "cs", "millisecond", "milliseconds", "ms", "microsecond", "microseconds", "nanosecond", "nanoseconds", "ns", "picosecond", "picoseconds", "ps", "femtosecond", "femtoseconds", "fs", "minute", "minutes", "min", "hour", "hours", "h", "milliday", "millidays", "md", "day", "days", "d", "week", "weeks", "wk", "fortnight", "fortnights", "fn", "month", "months", "mo", "year", "years", "a", "y", "yr", "decade", "decades", "dec", "century", "centuries", "millennium", "millennia", "moment", "moments", "shake", "shakes", "TU", "svedberg", "svedbergs", "S", "stere", "steres", "m3", "Pm3", "Tm3", "Gm3", "Mm3", "km3", "hm3", "dam3", "dm3", "cm3", "mm3", "nm3", "pm3", "fm3", "liter", "liters", "litre", "litres", "l", "L", "petaliter", "petaliters", "petalitre", "petalitres", "Pl", "PL", "teraliter", "teraliters", "teralitre", "teralitres", "Tl", "TL", "gigaliter", "gigaliters", "gigalitre", "gigalitres", "Gl", "GL", "megaliter", "megaliters", "megalitre", "megalitres", "Ml", "ML", "kiloliter", "kiloliters", "kilolitre", "kilolitres", "kl", "kL", "hectoliter", "hectoliters", "hectolitre", "hectolitres", "hl", "hL", "decaliter", "decaliters", "decalitre", "decalitres", "dal", "daL", "deciliter", "deciliters", "decilitre", "decilitres", "dl", "dL", "centiliter", "centiliters", "centilitre", "centilitres", "cl", "cL", "milliliter", "milliliters", "millilitre", "millilitres", "ml", "mL", "microliter", "microliters", "microlitre", "microlitres", "nanoliter", "nanoliters", "nanolitre", "nanolitres", "nl", "nL", "picoliter", "picoliters", "picolitre", "picolitres", "pl", "pL", "femtoliter", "femtoliters", "femtolitre", "femtolitres", "fl", "fL", "mi3", "yd3", "ft3", "in3", "MTON", "pk", "teaspoon", "teaspoons", "tsp", "tablespoon", "tablespoons", "tbsp", "cup", "cups", "c", "pint", "pints", "pt", "p", "quart", "quarts", "qt", "gallon", "gallons", "gal", "differences", "MeasureKindTime", "convertTo", "from", "quantity", "to", "parsedTo", "RangeError", "parsedFrom", "fromRatio", "toRatio", "BigInt", "convertToAny", "kind", "best", "smallestUnit", "bestUnit", "baseQuantity", "absQuantity", "i", "length", "bestEntry", "result", "unit", "toString", "toFixed", "undefined", "this", "_quantity", "_from", "convert", "bind", "splitExpression", "isBest", "resolvedUnit", "isFirstPass", "converted", "Number", "_search", "exec", "_value", "convertMany", "value", "lastIndex", "search", "source", "getMeasureKind", "unitObject"]
}
